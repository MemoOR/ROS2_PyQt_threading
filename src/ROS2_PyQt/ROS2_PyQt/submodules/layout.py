# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'layout.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import rclpy
import threading
from rclpy import executors
from rclpy.qos import qos_profile_sensor_data
from std_msgs.msg import String
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def __init__(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        font = QtGui.QFont()
        font.setPointSize(13)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(80, 60, 151, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(90, 330, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(80, 110, 151, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(80, 380, 161, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(550, 60, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(550, 330, 61, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.pushButton = QtWidgets.QPushButton(
            self.centralwidget, clicked=lambda: self.publish("forward"))
        self.pushButton.setGeometry(QtCore.QRect(490, 130, 191, 28))
        self.pushButton.setObjectName("forwardButton")
        self.pushButton_2 = QtWidgets.QPushButton(
            self.centralwidget, clicked=lambda: self.publish("back"))
        self.pushButton_2.setGeometry(QtCore.QRect(490, 410, 191, 28))
        self.pushButton_2.setObjectName("backButton")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.subscriber_init()
        self.publisher_init()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Sub1_Forward"))
        self.label_2.setText(_translate("MainWindow", "Sub2_Back"))
        self.label_3.setText(_translate("MainWindow", "----"))
        self.label_4.setText(_translate("MainWindow", "----"))
        self.label_5.setText(_translate("MainWindow", "Pub1"))
        self.label_6.setText(_translate("MainWindow", "Pub2"))
        self.pushButton.setText(_translate("MainWindow", "Forward"))
        self.pushButton_2.setText(_translate("MainWindow", "Back"))

    def publisher_init(self):
        self.pub = rclpy.create_node("publisher")
        self.publisher = self.pub.create_publisher(
            String, "/publisher", qos_profile=qos_profile_sensor_data)

    def publish(self, message):
        msg = String()
        msg.data = message
        print(f"sending {message} to motor direction")
        self.publisher.publish(msg)

    def subscriber_init(self):
        self.sub = rclpy.create_node("subscriber_1")
        self.sub_2 = rclpy.create_node("subscriber_2")
        self.sub1 = self.sub.create_subscription(
            String,
            '/publisher',
            self.sub_callback,
            qos_profile=qos_profile_sensor_data)

        self.sub2 = self.sub_2.create_subscription(
            String,
            '/publisher',
            self.sub2_callback,
            qos_profile=qos_profile_sensor_data)

        self.executor = executors.MultiThreadedExecutor()
        self.executor.add_node(self.sub)
        self.executor.add_node(self.sub_2)

        self.executor_thread = threading.Thread(
            target=self.executor.spin, daemon=True)
        self.executor_thread.start()

    def sub_callback(self, msg):
        self.label_3.setText(msg.data)

    def sub2_callback(self, msg):
        self.label_4.setText(msg.data)

    def destroy_nodes(self):
        self.pub.destroy_node()
        self.sub.destroy_node()
        self.sub_2.destroy_node()
        self.executor.shutdown()
